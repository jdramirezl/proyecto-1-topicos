syntax = "proto3";
option go_package = "proto/cluster/;cluster";

import "google/protobuf/empty.proto";

enum Type {
    QUEUE = 0;
    TOPIC = 1;
}

message SystemRequest {
    string id = 1;
    string name = 2;
    Type type = 3;
    string creator = 4;
}

message SubscriberRequest {
    string name = 1;
    Type type = 2;
    string ip = 3;
}

message PeerRequest {
    string ip = 1;
}

message ConnectionRequest {
    string ip = 1;
}

message MasterRequest {
    string ip = 1;
}

message PeerResponse {
    repeated string ip = 1;
}

message electLeaderResponse {
    int64 uptime = 1;
}

service ClusterService {
    rpc addMessagingSystem(SystemRequest) returns (google.protobuf.Empty) {};
    rpc removeMessagingSystem(SystemRequest) returns (google.protobuf.Empty) {};

    rpc addSubscriber(SubscriberRequest) returns (google.protobuf.Empty) {};
    rpc removeSubscriber(SubscriberRequest) returns (google.protobuf.Empty) {};

    rpc addConnection(ConnectionRequest) returns (google.protobuf.Empty) {};
    rpc removeConnection(ConnectionRequest) returns (google.protobuf.Empty) {};

    rpc addPeer(PeerRequest) returns (PeerResponse) {};
    rpc removePeer(PeerRequest) returns (google.protobuf.Empty) {};

    rpc newMaster (MasterRequest) returns (google.protobuf.Empty){};
    rpc heartbeat (google.protobuf.Empty) returns (google.protobuf.Empty){};
    
    rpc electLeader (google.protobuf.Empty) returns (electLeaderResponse){};
}
